<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computing on Jialuo Liu</title>
    <link>https://liujl93.github.io/tags/computing/</link>
    <description>Recent content in Computing on Jialuo Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jan 2019 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://liujl93.github.io/tags/computing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calling C/C&#43;&#43; from R and multithreading with OpenMP</title>
      <link>https://liujl93.github.io/post/rcpp/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 -0700</pubDate>
      
      <guid>https://liujl93.github.io/post/rcpp/</guid>
      <description>This post is related to a short course High Performance Computing for Spatial Data taught by Dr. Andrew Finley and Dr. Dorit Hammerling at 2018 ENVR Workshop. A useful slide can be found here.
There are three functions for integrating R and C/C++:
 .Call() External() .C()  .Call() In this short course, a detailed explanation of the function .Call() is given. In brief, you will need
 A C/C++ function (filename.</description>
    </item>
    
    <item>
      <title>Parallel Programming in R on High Performance Computing (HPC) systems at CSU</title>
      <link>https://liujl93.github.io/post/summit/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 -0700</pubDate>
      
      <guid>https://liujl93.github.io/post/summit/</guid>
      <description>Parallel computing in Python and Matlab is similar, a useful post can be found here.
Good problems for such type of high performance computing systems are the so-called &amp;ldquo;Embarassingly parallelizable problems&amp;rdquo;. That is, the problem can be separated to a number of mutually independent tasks.
Road-map for Running Your R Code on Summit 1. Code Preparation. For convenience, I often prepare three files:
 A bash file: (job.txt)  Summit #!</description>
    </item>
    
    <item>
      <title>STplm: Spatio-Temporal Partial Linear Model and Bandwidth Selection.</title>
      <link>https://liujl93.github.io/post/stplm/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 -0700</pubDate>
      
      <guid>https://liujl93.github.io/post/stplm/</guid>
      <description> STplm Spatio-Temporal Partial Linear Model and Bandwidth Selection.
Installation This package can be installed directly from R by running the following code:
library(devtools) install_github(&amp;quot;liujl93/STplm&amp;quot;)  Alternatively, one can download the .tar.gz file from github and then run:
install.packages(&amp;quot;~/STplm_0.1.0.tar.gz&amp;quot;, repos = NULL, type = &amp;quot;source&amp;quot;)  </description>
    </item>
    
    <item>
      <title>STplm: Spatio-Temporal Partial Linear Model and Bandwidth Selection.</title>
      <link>https://liujl93.github.io/project/stplm/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 -0700</pubDate>
      
      <guid>https://liujl93.github.io/project/stplm/</guid>
      <description> STplm Spatio-Temporal Partial Linear Model and Bandwidth Selection.
Installation This package can be installed directly from R by running the following code:
library(devtools) install_github(&amp;quot;liujl93/STplm&amp;quot;)  Alternatively, one can download the .tar.gz file from github and then run:
install.packages(&amp;quot;~/STplm_0.1.0.tar.gz&amp;quot;, repos = NULL, type = &amp;quot;source&amp;quot;)  </description>
    </item>
    
  </channel>
</rss>